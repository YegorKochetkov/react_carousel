{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","animationDurationInner","props","animationDuration","isAnimationInner","isAnimation","this","images","frameSize","itemWidth","shift","shiftInner","className","style","width","height","transform","transition","map","image","index","src","alt","String","React","Component","App","settings","step","isInfinite","isScrollLeft","scrollLeft","setState","addShift","length","scrollRight","prevImage","splice","newImages","newSettings","setTimeout","parameter","newValue","type","onClick","disabled","min","max","defaultValue","onChange","target","updateSettings","Number","value","defaultChecked","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d478cf0.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  isAnimation: boolean,\n  shift: number,\n  shiftInner: number,\n}\n\ntype State = {\n  animationDurationInner: number,\n  isAnimationInner: boolean,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state: State = {\n    animationDurationInner: this.props.animationDuration,\n    isAnimationInner: this.props.isAnimation,\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      shift,\n      shiftInner,\n      animationDuration,\n      isAnimation,\n    } = this.props;\n\n    const { animationDurationInner, isAnimationInner } = this.state;\n\n    return (\n      <>\n        <div\n          className=\"carousel\"\n          style={{\n            width: `${itemWidth * frameSize}px`,\n            height: `${itemWidth + 4}px`,\n          }}\n        >\n          <div\n            className=\"carousel__container\"\n            style={{\n              transform: `translateX(${shift}px)`,\n              transition: `transform ${isAnimation ? animationDuration : 0}ms`,\n            }}\n          >\n            <div\n              style={{\n                transform: `translateX(${shiftInner}px`,\n                transition: `transform ${isAnimationInner ? animationDurationInner : 0}ms`,\n              }}\n            >\n              {images.map((image, index) => (\n                <img\n                  key={image + String(index)}\n                  src={image}\n                  alt={image}\n                  style={{\n                    width: `${itemWidth}px`,\n                  }}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ntype Settings = {\n  frameSize: number;\n  itemWidth: number;\n  step: number;\n  animationDuration: number;\n  isAnimation: boolean,\n  isInfinite: boolean;\n  shift: number,\n  shiftInner: number,\n  isScrollLeft: boolean,\n};\n\ntype State = {\n  images: string[];\n  settings: Settings;\n};\n\nconst defaultLength = 10;\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    settings: {\n      step: 3,\n      frameSize: 3,\n      itemWidth: 130,\n      animationDuration: 1000,\n      isAnimation: true,\n      isInfinite: false,\n      shift: 0,\n      shiftInner: 0,\n      isScrollLeft: false,\n    },\n  };\n\n  componentDidUpdate() {\n    if (!this.state.settings.isAnimation && !this.state.settings.isInfinite) {\n      const newSettings = this.state.settings;\n\n      this.setState({\n        settings: {\n          ...newSettings,\n          isAnimation: true,\n          shift: 0,\n          shiftInner: 0,\n        },\n      });\n    }\n\n    if (this.state.settings.isScrollLeft\n      && this.state.settings.isInfinite\n      && this.state.images.length === defaultLength) {\n      const prevImage = this.state.images.splice(0, this.state.settings.step);\n      const newImages = [...this.state.images, ...prevImage];\n\n      setTimeout(() => {\n        this.setState(({ settings }) => {\n          return ({\n            images: newImages,\n            settings: {\n              ...settings,\n              shift: 0,\n              isScrollLeft: false,\n              isAnimation: false,\n            },\n          });\n        });\n      }, this.state.settings.animationDuration);\n    }\n  }\n\n  scrollLeft = () => {\n    if (this.state.settings.isInfinite && !this.state.settings.isScrollLeft) {\n      this.setState(({ settings }) => {\n        const shift = settings.itemWidth * settings.step;\n\n        return ({\n          settings: {\n            ...settings,\n            shift: settings.shift - shift,\n            isScrollLeft: true,\n            isAnimation: true,\n          },\n        });\n      });\n    }\n\n    if (!this.state.settings.isInfinite) {\n      this.setState(({ images, settings }) => {\n        const shift = settings.itemWidth * settings.step;\n        let addShift = settings.shift - shift;\n\n        if (settings.shift - shift\n            < -(images.length - 1) * settings.itemWidth) {\n          addShift = -(images.length - settings.frameSize) * settings.itemWidth;\n        }\n\n        return ({\n          images,\n          settings: {\n            ...settings,\n            shift: addShift,\n          },\n        });\n      });\n    }\n  };\n\n  scrollRight = () => {\n    if (this.state.settings.isInfinite) {\n      this.setState(({ images, settings }) => {\n        const prevImage = images.splice(-settings.step);\n        const newImages = [...prevImage, ...images];\n        const shift = settings.itemWidth * settings.step;\n\n        return ({\n          images: newImages,\n          settings: {\n            ...settings,\n            shift: settings.shift - shift,\n            shiftInner: settings.shiftInner + shift,\n            isAnimation: false,\n          },\n        });\n      });\n    }\n\n    if (!this.state.settings.isInfinite) {\n      this.setState(({ images, settings }) => {\n        const shift = settings.itemWidth * settings.step;\n\n        let addShift = settings.shift + shift;\n\n        if (settings.shift + shift > 0) {\n          addShift = 0;\n        }\n\n        return ({\n          images,\n          settings: {\n            ...settings,\n            shift: addShift,\n          },\n        });\n      });\n    }\n  };\n\n  updateSettings\n  <T extends keyof Settings>(parameter: T, newValue: Settings[T]) {\n    this.setState(({ settings }) => ({\n      settings: {\n        ...settings,\n        [parameter]: newValue,\n      },\n    }));\n  }\n\n  render() {\n    const { images } = this.state;\n    const {\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      isAnimation,\n      isInfinite,\n      shift,\n      shiftInner,\n    } = this.state.settings;\n\n    return (\n      <div className=\"app\">\n        <h1>\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          isAnimation={isAnimation}\n          shift={shift}\n          shiftInner={shiftInner}\n        />\n        <div className=\"carousel__buttons\">\n          <button\n            type=\"button\"\n            className=\"carousel__prev-button\"\n            onClick={this.scrollRight}\n            disabled={\n              !isInfinite\n              && shift >= 0\n            }\n          >\n            {'<'}\n          </button>\n          <button\n            type=\"button\"\n            className=\"carousel__next-button\"\n            onClick={this.scrollLeft}\n            disabled={\n              !isInfinite\n              && shift < -(images.length - frameSize - 1) * itemWidth\n            }\n          >\n            {'>'}\n          </button>\n        </div>\n        <fieldset className=\"app__settings\">\n          <label className=\"app__setting\">\n            Step:\n            <input\n              className=\"app__step\"\n              type=\"number\"\n              min=\"1\"\n              max={images.length}\n              defaultValue={step}\n              onChange={\n                (({ target }) => this\n                  .updateSettings('step', Number(target.value)))\n              }\n            />\n          </label>\n\n          <label className=\"app__setting\">\n            Frame size:\n            <input\n              className=\"app__frame-size\"\n              type=\"number\"\n              min=\"1\"\n              max={images.length}\n              defaultValue={frameSize}\n              onChange={\n                (({ target }) => this\n                  .updateSettings('frameSize', Number(target.value)))\n              }\n            />\n          </label>\n\n          <label className=\"app__setting\">\n            Item width:\n            <input\n              className=\"app__item-width\"\n              type=\"number\"\n              min=\"80\"\n              max=\"180\"\n              step=\"10\"\n              defaultValue={itemWidth}\n              onChange={\n                (({ target }) => this\n                  .updateSettings('itemWidth', Number(target.value)))\n              }\n            />\n          </label>\n\n          <label className=\"app__setting\">\n            Anitmation duration:\n            <input\n              className=\"app__animation-duration\"\n              type=\"number\"\n              min=\"0\"\n              max=\"2000\"\n              step=\"500\"\n              defaultValue={animationDuration}\n              onChange={\n                (({ target }) => this\n                  .updateSettings('animationDuration', Number(target.value)))\n              }\n            />\n          </label>\n\n          <label className=\"app__setting\">\n            Infinite:\n            <input\n              className=\"app__infinite\"\n              type=\"checkbox\"\n              defaultChecked={isInfinite}\n              onChange={\n                (({ target }) => this\n                  .updateSettings('isInfinite', target.checked))\n              }\n            />\n            {\n              isInfinite\n                ? 'Yes'\n                : 'No'\n            }\n          </label>\n        </fieldset>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}